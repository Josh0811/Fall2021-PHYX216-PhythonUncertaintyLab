{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "12411c95",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.006787773351287142\n",
      "1.1166666666666667\n",
      "0.073282810879294\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "\n",
    "def rule1 (da,c):\n",
    "    dQ = np.abs(c)*da\n",
    "    return dQ\n",
    "\n",
    "def rule2 (c, a, da, m):\n",
    "    dQ = np.abs(c*m*a**(m-1))*da\n",
    "    return dQ\n",
    "\n",
    "def rule3 (da, db):\n",
    "    dQ = np.sqrt(da**2+db**2)\n",
    "    return dQ\n",
    "\n",
    "def rule4 (Q, m, n, da, a, b, db):\n",
    "    dQ = np.abs(Q)*np.sqrt((m*(da/a))**2+(n*(db/b))**2)\n",
    "    return dQ\n",
    "\n",
    "m = 1\n",
    "n = -.5\n",
    "Q = 5.06\n",
    "da = .003\n",
    "a = 2.277\n",
    "db = .0005\n",
    "b = .991\n",
    "errtotal = rule4(Q, m, n, da, a, b, db)\n",
    "print (errtotal)\n",
    "\n",
    "#the uncertainty derived from the code is .00679, while our calculated uncertainty was .00657. The difference may be due to rounding\n",
    "\n",
    "x = (1.1, 1.3, 1.4, .9, .95, 1.05)\n",
    "xmean = np.average(x)\n",
    "errx = (np.std(x))/(np.sqrt(6))\n",
    "print (xmean)\n",
    "print (errx)\n",
    "    \n",
    "#when the code is run, xmean is 1.117. This represents the average of the values. Errx, or the uncertainty, is .0733"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5018f2f0",
   "metadata": {},
   "source": [
    " 𝛿𝑄=(𝛿𝐴)2+(𝛿𝐵)2⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯√\n",
    "vi=xg2y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c577894b",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "80af0c00",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
